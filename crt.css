/* Wrapper for Datacats & CRT */
.crt-wrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 15px; /* Space between text & CRT */
}

/* Clickable Datacats Title */
.datacats-title {
  font-size: 36px;
  font-weight: bold;
  text-transform: uppercase;
  color: #00d4ff;
  text-shadow: 0px 0px 10px rgba(0, 212, 255, 0.8);
  font-family: "Poppins", sans-serif;
  letter-spacing: 2px;
  text-decoration: none;
  transition: transform 0.2s ease, text-shadow 0.3s ease;
}

/* Hover Effect for Datacats */
.datacats-title:hover {
  transform: scale(1.1);
  text-shadow: 0px 0px 15px rgba(0, 212, 255, 1);
}

/* Adjust for Mobile */
@media screen and (max-width: 768px) {
  .crt-wrapper {
    gap: 10px;
  }

  .datacats-title {
    font-size: 28px;
  }
}

/* Fullscreen Centered CRT */
body {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100vh;
  background: radial-gradient(circle, #0a0f24, #000);
  overflow: hidden;
}

/* CRT Monitor */
.crt-container {
  position: relative;
  width: 1000px;
  height: 750px;
  background: linear-gradient(145deg, #1a1a1a, #0d0d0d);
  border-radius: 15px;
  box-shadow: inset 0 0 10px rgba(0, 255, 136, 0.3);
  border: 4px solid #333;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
}

/* CRT Screen */
.crt-screen {
  width: 90%;
  height: 70%;
  background: #000;
  border-radius: 5px;
  overflow: hidden;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: inset 0 0 25px rgba(0, 255, 136, 0.1);
}

/* Green Glow Effect */
.crt-overlay {
  position: absolute;
  width: 100%;
  height: 100%;
  background: radial-gradient(circle, rgba(0, 255, 136, 0.1), rgba(0, 0, 0, 0.9));
  pointer-events: none;
  opacity: 0;
  transition: opacity 0.5s ease-in-out;
}

/* CRT Text */
.crt-text {
  font-family: "Courier New", monospace;
  font-size: 18px;
  color: rgba(0, 255, 136, 0.3);
  text-align: center;
  opacity: 0;
  transition: opacity 1s ease-in-out;
}

/* Power Button */
.power-button {
  width: 40px;
  height: 40px;
  background: radial-gradient(circle, #222, #000);
  border: 2px solid #444;
  border-radius: 50%;
  margin-top: 15px;
  cursor: pointer;
  box-shadow: inset 0 0 5px rgba(255, 0, 0, 0.7);
  transition: box-shadow 0.2s ease-in-out, background 0.3s ease;
  animation: blink-red 1.5s infinite alternate; /* ðŸ”´ Slow blinking effect */
}

/* ðŸ”´ Blinking Red Effect When Off */
@keyframes blink-red {
  0% { box-shadow: inset 0 0 5px rgba(255, 0, 0, 0.7); }
  100% { box-shadow: inset 0 0 12px rgba(255, 0, 0, 1); }
}

/* ðŸŸ¢ Green Glow When Powered On */
.crt-active .power-button {
  box-shadow: inset 0 0 12px rgba(0, 255, 0, 1);
  background: radial-gradient(circle, #00ff00, #007700);
  animation: none; /* Stops the red blinking */
}


.power-button:active {
  box-shadow: inset 0 0 10px rgba(255, 0, 0, 1);
}

/* Active CRT (Powered On) */
.crt-active .crt-overlay {
  opacity: 1;
}

.crt-active .crt-text {
  opacity: 1;
  color: rgba(0, 255, 136, 1);
}

/* Game Area Inside CRT */
.game-container {
  position: absolute;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background: url('living-room.png') no-repeat center;
  background-size: cover;
  opacity: 0; /* Hidden until powered on */
  transition: opacity 0.5s ease-in-out;
}

/* Show Game When CRT is Active */
.crt-active .game-container {
  opacity: 1;
}

/* 8-bit Cat */
.datacat {
  width: 80px;
  height: auto;
  image-rendering: pixelated;
}

/* Hide Happiness Bar When CRT is Off */
.happiness-container {
  position: absolute;
  top: 10px;
  right: 5px;
  display: flex;
  flex-direction: column;
  align-items: center;
  background: rgba(0, 0, 0, 0.5);
  padding: 2.5px 5px;
  border-radius: 2.5px;
  font-family: "Courier New", monospace;
  font-size: 12px;
  color: #00ff88;
  opacity: 0; /* Hidden by default */
  z-index: 2; /* Ensure it's on top of the background */
  transition: opacity 0.5s ease-in-out;
}

/* Show Happiness Bar When CRT is On */
.crt-active .happiness-container {
  opacity: 1;
}


/* Happiness Bar */
.happiness-bar {
  width: 60px;
  height: 10px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 5px;
  margin-top: 5px;
  overflow: hidden;
  border: 1px solid #00ff88;
}

/* Filling Animation */
#happiness-fill {
  height: 100%;
  width: 50%; /* Default: 50% filled */
  background: linear-gradient(90deg, #ff0000, #ffcc00, #00ff00);
  transition: width 0.3s ease-in-out;
}


/* Positioning Game Buttons to the Left */
.game-buttons {
  position: absolute;
  left: 5px;
  top: 20%;
  transform: translateY(-50%);
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.game-buttons button {
  padding: 8px 6px;
  font-size: 14px;
  font-weight: bold;
  border: none;
  cursor: pointer;
  background: #222;
  color: #00ff88;
  border-radius: 5px;
  transition: transform 0.2s ease;
  text-align: left;
}

.game-buttons button:hover {
  transform: scale(1.1);
  background: #00ff88;
  color: #222;
}

/* Ensure Game UI is Visible */
.game-buttons,
#happiness-text {
  position: absolute;
  z-index: 2; /* Bring UI elements to the front */
  opacity: 0; /* Hidden by default */
  transition: opacity 0.5s ease-in-out;
}

/* Show Buttons & Happiness When CRT is On */
.crt-active .game-buttons,
.crt-active #happiness-text {
  opacity: 1;
}

/* Background Image (Living Room) */
.game-container {
  position: absolute;
  width: 100%;
  height: 100%;
  background: url('living-room.png') no-repeat center;
  background-size: cover;
  z-index: 1; /* Keep background behind UI */
}

/* 8-bit Moving Cat */
.datacat {
  position: absolute;
  width: 80px;
  height: auto;
  image-rendering: pixelated;
  bottom: 2%; /* 80% of the way down */
  right: -100px; /* Start off-screen */
  animation: moveCat 10s linear forwards;
}

/* Keyframes for Movement */
@keyframes moveCat {
  0% { right: -100px; } /* Start off-screen */
  100% { right: 32%; transform: translateX(50%); } /* Stop near the middle */
}
